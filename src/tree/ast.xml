<Programma>
<Decls>
<VarDecl>
<Type>
INT
</Type>
<VarDeclsInit>
<Id>
num
</Id>
<Id>
res
</Id>
<Id>
sum
</Id>
<VarInitValue>
<IntConst>
0
</IntConst>
</VarInitValue>
</VarDeclsInit>
</VarDecl>
<VarDecl>
<Type>
BOOL
</Type>
<VarDeclsInit>
<Id>
flag
</Id>
<VarInitValue>
<BoolConst>
false
</BoolConst>
</VarInitValue>
</VarDeclsInit>
</VarDecl>
<DefDecl>
<Id>
fibonacci
</Id>
<ParDeclsOp>
<ParType>
IN
</ParType>
<Type>
INT
</Type>
<Id>
num
</Id>
</ParDeclsOp>
<Body>
<VarDecls>
<VarDecl>
<Type>
INT
</Type>
<VarDeclsInit>
<Id>
i
</Id>
<VarInitValue>
<IntConst>
1
</IntConst>
</VarInitValue>
<Id>
a
</Id>
<VarInitValue>
<UminusOp>
<IntConst>
1
</IntConst>
</UminusOp>
</VarInitValue>
<Id>
b
</Id>
<VarInitValue>
<IntConst>
1
</IntConst>
</VarInitValue>
</VarDeclsInit>
</VarDecl>
</VarDecls>
<Statements>
<WhileOp>
<LeOp>
<Id>
i
</Id>
<Id>
num
</Id>
</LeOp>
<CompStat>
<Statements>
<AssignOp>
<Id>
res
</Id>
<AddOp>
<Id>
a
</Id>
<Id>
b
</Id>
</AddOp>
</AssignOp>
<AssignOp>
<Id>
a
</Id>
<Id>
b
</Id>
</AssignOp>
<AssignOp>
<Id>
b
</Id>
<Id>
res
</Id>
</AssignOp>
<AssignOp>
<Id>
i
</Id>
<AddOp>
<Id>
i
</Id>
<IntConst>
1
</IntConst>
</AddOp>
</AssignOp>
<WriteOp>
<ArgsOp>
<Id>
res
</Id>
</ArgsOp>
</WriteOp>
</Statements>
</CompStat>
</WhileOp>
</Statements>
</Body>
</DefDecl>
<DefDecl>
<Id>
sommaFibonacci
</Id>
<ParDeclsOp>
<ParType>
IN
</ParType>
<Type>
INT
</Type>
<Id>
num
</Id>
<ParType>
OUT
</ParType>
<Type>
INT
</Type>
<Id>
sum
</Id>
</ParDeclsOp>
<Body>
<VarDecls>
<VarDecl>
<Type>
INT
</Type>
<VarDeclsInit>
<Id>
i
</Id>
<VarInitValue>
<IntConst>
1
</IntConst>
</VarInitValue>
<Id>
a
</Id>
<VarInitValue>
<UminusOp>
<IntConst>
1
</IntConst>
</UminusOp>
</VarInitValue>
<Id>
b
</Id>
<VarInitValue>
<IntConst>
1
</IntConst>
</VarInitValue>
</VarDeclsInit>
</VarDecl>
</VarDecls>
<Statements>
<WhileOp>
<LeOp>
<Id>
i
</Id>
<Id>
num
</Id>
</LeOp>
<CompStat>
<Statements>
<AssignOp>
<Id>
res
</Id>
<AddOp>
<Id>
a
</Id>
<Id>
b
</Id>
</AddOp>
</AssignOp>
<AssignOp>
<Id>
a
</Id>
<Id>
b
</Id>
</AssignOp>
<AssignOp>
<Id>
b
</Id>
<Id>
res
</Id>
</AssignOp>
<AssignOp>
<Id>
i
</Id>
<AddOp>
<Id>
i
</Id>
<IntConst>
1
</IntConst>
</AddOp>
</AssignOp>
<AssignOp>
<Id>
sum
</Id>
<AddOp>
<Id>
sum
</Id>
<Id>
res
</Id>
</AddOp>
</AssignOp>
</Statements>
</CompStat>
</WhileOp>
</Statements>
</Body>
</DefDecl>
<DefDecl>
<Id>
checkInput
</Id>
<ParDeclsOp>
<ParType>
IN
</ParType>
<Type>
INT
</Type>
<Id>
x
</Id>
<ParType>
OUT
</ParType>
<Type>
BOOL
</Type>
<Id>
flag
</Id>
</ParDeclsOp>
<Body>
<VarDecls>
</VarDecls>
<Statements>
<IfThenElseOp>
<GeOp>
<Id>
x
</Id>
<IntConst>
0
</IntConst>
</GeOp>
<CompStat>
<Statements>
<AssignOp>
<Id>
flag
</Id>
<BoolConst>
true
</BoolConst>
</AssignOp>
</Statements>
</CompStat>
<CompStat>
<Statements>
<AssignOp>
<Id>
flag
</Id>
<BoolConst>
false
</BoolConst>
</AssignOp>
</Statements>
</CompStat>
</IfThenElseOp>
</Statements>
</Body>
</DefDecl>
</Decls>
<Statements>
<WriteOp>
<ArgsOp>
<StringConst>
&quot;Quanti numeri di Fibonacci vuoi vedere&quot;
</StringConst>
</ArgsOp>
</WriteOp>
<ReadOp>
<Vars>
<Id>
num
</Id>
</Vars>
</ReadOp>
<CallOpWithArgs>
<Id>
checkInput
</Id>
<ArgsOp>
<Id>
num
</Id>
<Id>
flag
</Id>
</ArgsOp>
</CallOpWithArgs>
<IfThenElseOp>
<EqOp>
<Id>
flag
</Id>
<BoolConst>
true
</BoolConst>
</EqOp>
<CompStat>
<Statements>
<WriteOp>
<ArgsOp>
<StringConst>
&quot;Questa è la sequenza&quot;
</StringConst>
</ArgsOp>
</WriteOp>
<CallOpWithArgs>
<Id>
fibonacci
</Id>
<ArgsOp>
<Id>
num
</Id>
</ArgsOp>
</CallOpWithArgs>
<WriteOp>
<ArgsOp>
<StringConst>
&quot;La somma della sequenza è&quot;
</StringConst>
</ArgsOp>
</WriteOp>
<CallOpWithArgs>
<Id>
sommaFibonacci
</Id>
<ArgsOp>
<Id>
num
</Id>
<Id>
sum
</Id>
</ArgsOp>
</CallOpWithArgs>
<WriteOp>
<ArgsOp>
<Id>
sum
</Id>
</ArgsOp>
</WriteOp>
</Statements>
</CompStat>
<CompStat>
<Statements>
<WriteOp>
<ArgsOp>
<StringConst>
&quot;Inserisci un intero positivo&quot;
</StringConst>
</ArgsOp>
</WriteOp>
</Statements>
</CompStat>
</IfThenElseOp>
</Statements>
</Programma>
