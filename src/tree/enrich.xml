<Programma symTbl = "Globale" type = "VOID">
<Decls type = "VOID">
<VarDecl type = "VOID">
<Type>
INT
</Type>

<VarDeclsInit type = "VOID">
<VarNotInit>
<Id type = "INT">
num
</Id>

</VarNotInit>

<VarNotInit>
<Id type = "INT">
res
</Id>

</VarNotInit>

<VarInit>
<Id type = "INT">
sum
</Id>

<VarInitValue type = "INT">
<IntConst>
0
</IntConst>
</VarInitValue>

</VarInit>

</VarDeclsInit>

</VarDecl>

<VarDecl type = "VOID">
<Type>
BOOL
</Type>

<VarDeclsInit type = "VOID">
<VarInit>
<Id type = "BOOL">
flag
</Id>

<VarInitValue type = "BOOL">
<BoolConst>
false
</BoolConst>
</VarInitValue>

</VarInit>

</VarDeclsInit>

</VarDecl>

<DefDecl symTbl = "fibonacci" type = "VOID">
<Id type = "VOID">
fibonacci
</Id>

<ParDeclsOp>
<ParDeclSon>
<ParType>
IN
</ParType>
<Type>
INT
</Type>
<Id>
num
</Id>
</ParDeclSon>
</ParDeclsOp>

<Body type = "VOID">
<VarDecls type = "VOID">
<VarDecl type = "VOID">
<Type>
INT
</Type>

<VarDeclsInit type = "VOID">
<VarInit>
<Id type = "INT">
i
</Id>

<VarInitValue type = "INT">
<IntConst>
1
</IntConst>
</VarInitValue>

</VarInit>

<VarInit>
<Id type = "INT">
a
</Id>

<VarInitValue type = "INT">
<UminusOp type = "INT">
<IntConst>
1
</IntConst>

</UminusOp>
</VarInitValue>

</VarInit>

<VarInit>
<Id type = "INT">
b
</Id>

<VarInitValue type = "INT">
<IntConst>
1
</IntConst>
</VarInitValue>

</VarInit>

</VarDeclsInit>

</VarDecl>

</VarDecls>

<Statements>
<WhileOp type = "VOID">
<LeOp type = "BOOL">
<Id type = "INT">
i
</Id>

<Id type = "INT">
num
</Id>

</LeOp>

<CompStat type = "VOID">
<Statements>
<AssignOp type = "VOID">
<Id type = "INT">
res
</Id>

<AddOp type = "INT">
<Id type = "INT">
a
</Id>

<Id type = "INT">
b
</Id>

</AddOp>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
a
</Id>

<Id type = "INT">
b
</Id>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
b
</Id>

<Id type = "INT">
res
</Id>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
i
</Id>

<AddOp type = "INT">
<Id type = "INT">
i
</Id>

<IntConst>
1
</IntConst>

</AddOp>

</AssignOp>

<WriteOp type = "VOID">
<ArgsOp type = "VOID">
<Id type = "INT">
res
</Id>

</ArgsOp>

</WriteOp>

</Statements>

</CompStat>

</WhileOp>

</Statements>

</Body>

</DefDecl>

<DefDecl symTbl = "sommaFibonacci" type = "VOID">
<Id type = "VOID">
sommaFibonacci
</Id>

<ParDeclsOp>
<ParDeclSon>
<ParType>
IN
</ParType>
<Type>
INT
</Type>
<Id>
num
</Id>
</ParDeclSon>
<ParDeclSon>
<ParType>
OUT
</ParType>
<Type>
INT
</Type>
<Id>
sum
</Id>
</ParDeclSon>
</ParDeclsOp>

<Body type = "VOID">
<VarDecls type = "VOID">
<VarDecl type = "VOID">
<Type>
INT
</Type>

<VarDeclsInit type = "VOID">
<VarInit>
<Id type = "INT">
i
</Id>

<VarInitValue type = "INT">
<IntConst>
1
</IntConst>
</VarInitValue>

</VarInit>

<VarInit>
<Id type = "INT">
a
</Id>

<VarInitValue type = "INT">
<UminusOp type = "INT">
<IntConst>
1
</IntConst>

</UminusOp>
</VarInitValue>

</VarInit>

<VarInit>
<Id type = "INT">
b
</Id>

<VarInitValue type = "INT">
<IntConst>
1
</IntConst>
</VarInitValue>

</VarInit>

</VarDeclsInit>

</VarDecl>

</VarDecls>

<Statements>
<WhileOp type = "VOID">
<LeOp type = "BOOL">
<Id type = "INT">
i
</Id>

<Id type = "INT">
num
</Id>

</LeOp>

<CompStat type = "VOID">
<Statements>
<AssignOp type = "VOID">
<Id type = "INT">
res
</Id>

<AddOp type = "INT">
<Id type = "INT">
a
</Id>

<Id type = "INT">
b
</Id>

</AddOp>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
a
</Id>

<Id type = "INT">
b
</Id>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
b
</Id>

<Id type = "INT">
res
</Id>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
i
</Id>

<AddOp type = "INT">
<Id type = "INT">
i
</Id>

<IntConst>
1
</IntConst>

</AddOp>

</AssignOp>

<AssignOp type = "VOID">
<Id type = "INT">
sum
</Id>

<AddOp type = "INT">
<Id type = "INT">
sum
</Id>

<Id type = "INT">
res
</Id>

</AddOp>

</AssignOp>

</Statements>

</CompStat>

</WhileOp>

</Statements>

</Body>

</DefDecl>

<DefDecl symTbl = "checkInput" type = "VOID">
<Id type = "VOID">
checkInput
</Id>

<ParDeclsOp>
<ParDeclSon>
<ParType>
IN
</ParType>
<Type>
INT
</Type>
<Id>
x
</Id>
</ParDeclSon>
<ParDeclSon>
<ParType>
OUT
</ParType>
<Type>
BOOL
</Type>
<Id>
flag
</Id>
</ParDeclSon>
</ParDeclsOp>

<Body type = "VOID">
<VarDecls type = "VOID">
</VarDecls>

<Statements>
<IfThenElseOp type = "VOID">
<GeOp type = "BOOL">
<Id type = "INT">
x
</Id>

<IntConst>
0
</IntConst>

</GeOp>

<CompStat type = "VOID">
<Statements>
<AssignOp type = "VOID">
<Id type = "BOOL">
flag
</Id>

<BoolConst>
true
</BoolConst>

</AssignOp>

</Statements>

</CompStat>

<CompStat type = "VOID">
<Statements>
<AssignOp type = "VOID">
<Id type = "BOOL">
flag
</Id>

<BoolConst>
false
</BoolConst>

</AssignOp>

</Statements>

</CompStat>

</IfThenElseOp>

</Statements>

</Body>

</DefDecl>

</Decls>

<Statements>
<WriteOp type = "VOID">
<ArgsOp type = "VOID">
<StringConst>
&quot;Quanti numeri di Fibonacci vuoi vedere&quot;
</StringConst>

</ArgsOp>

</WriteOp>

<ReadOp type = "VOID">
<Vars type = "VOID">
<Id type = "INT">
num
</Id>
</Vars>

</ReadOp>

<CallOpWithArgs type = "VOID">
<Id type = "VOID">
checkInput
</Id>

<ArgsOp type = "VOID">
<Id type = "INT">
num
</Id>

<Id type = "BOOL">
flag
</Id>

</ArgsOp>

</CallOpWithArgs>

<IfThenElseOp type = "VOID">
<EqOp type = "BOOL">
<Id type = "BOOL">
flag
</Id>

<BoolConst>
true
</BoolConst>

</EqOp>

<CompStat type = "VOID">
<Statements>
<WriteOp type = "VOID">
<ArgsOp type = "VOID">
<StringConst>
&quot;Questa è la sequenza&quot;
</StringConst>

</ArgsOp>

</WriteOp>

<CallOpWithArgs type = "VOID">
<Id type = "VOID">
fibonacci
</Id>

<ArgsOp type = "VOID">
<Id type = "INT">
num
</Id>

</ArgsOp>

</CallOpWithArgs>

<WriteOp type = "VOID">
<ArgsOp type = "VOID">
<StringConst>
&quot;La somma della sequenza è&quot;
</StringConst>

</ArgsOp>

</WriteOp>

<CallOpWithArgs type = "VOID">
<Id type = "VOID">
sommaFibonacci
</Id>

<ArgsOp type = "VOID">
<Id type = "INT">
num
</Id>

<Id type = "INT">
sum
</Id>

</ArgsOp>

</CallOpWithArgs>

<WriteOp type = "VOID">
<ArgsOp type = "VOID">
<Id type = "INT">
sum
</Id>

</ArgsOp>

</WriteOp>

</Statements>

</CompStat>

<CompStat type = "VOID">
<Statements>
<WriteOp type = "VOID">
<ArgsOp type = "VOID">
<StringConst>
&quot;Inserisci un intero positivo&quot;
</StringConst>

</ArgsOp>

</WriteOp>

</Statements>

</CompStat>

</IfThenElseOp>

</Statements>

</Programma>
