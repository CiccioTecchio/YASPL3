head

int x,y,res,opt;

def somma(in int x, in int y, out int res ){
res = x + y;
}

def mult(in int x, in int y, inout int res ){
int i=0;
while(not(i==y)) do{
	res = res + x;
	i = i + 1;
}
}

def divisione(in int x, in int y, out int res){
res = x / y;
}

def printBinOp(in int x, in char op, in int y, inout int res){
	x," ",op," ", y," = ",res,"\n"->;
}

def potenza(in int x, in int y, inout int res){
int i=1;
while(not(i==(y+1))) do{
	res = res * x;
	i = i + 1;
}
}

def fibonacci(in int num){
  int i = 1, a = -1, b = 1;
  res = 0;
  while(i <= num)do{
      res = a + b;
      a = b;
      b = res;
      i = i + 1;
      res,"\n"->;
  }
}

def fibonacciRecursion(in int n, inout int o){
	int t = 0;
	if(n==1 or n==2) then{
		t=1;
	}
	else{
		fibonacciRecursion(n-1,o);
		t = t + o;
		fibonacciRecursion(n-2,o);
		t = t + o;
	}
	o = t;
}

def initFibonacci(inout int x){
"inserisci intero\n"->;
x <-;
while(x<=0)do{
	"fibonacci si appica su numeri > 0\n inserisci un intero positivo\n"->;
	x<-;
}
}

def menu(){
    "Scegli un opzione:\n",
    "1. Somma fra due interi\n",
    "2. Moltiplicazione fra due interi\n",
    "3. Divisione fra due interi\n",
    "4. Elevazione a potenza\n",
    "5. Sequenza di fibonacci\n",
    "6. Somma dei numeri di fibonacci\n",
    "0. Esci\n"->;
}



start
menu();
opt<-;
while(not(opt == 0)) do{
	if(opt == 1) then {
		"inserisci 2 interi positivi\n"->;
		x,y<-;
		somma(x,y,res);
		printBinOp(x,'+',y,res);
	}else{
	
	if(opt == 2)then{
		"inserisci 2 numeri"->;
		x,y<-;
		res = 0;
		mult(x,y,res);
		printBinOp(x,'*',y,res);
	}else{
		if(opt == 3) then{
		"inserisci 2 interi positivi\n"->;
		x,y<-;
		while(x<0 or y<0)do{
		"inserisci 2 interi positivi\n"->;
		x,y<-;
		}
		divisione(x,y,res);
		printBinOp(x,'/',y,res);
		}
	else {
		if(opt == 4) then{
		"inserisci 2 interi positivi\n"->;
		x,y<-;
		while(y<0)do{
		"l'esponente deve essere positivo\n"->;
		y<-;
		}
		res = 1;
		potenza(x,y,res);
		printBinOp(x,'^',y,res);
		}
	else {
		if(opt == 5)then{
			initFibonacci(x);
            fibonacci(x);
		} else{
			if(opt == 6)then{
			initFibonacci(x);
			res = 0;
            fibonacciRecursion(x,res);
            res->;
		}
		}
	}
	}
	}

	}
menu();
opt<-;
}
